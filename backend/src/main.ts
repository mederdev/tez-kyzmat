import { NestFactory } from "@nestjs/core";
import {
  FastifyAdapter,
  NestFastifyApplication,
} from "@nestjs/platform-fastify";
import { ValidationPipe } from "@nestjs/common";
import { ConfigService } from "@nestjs/config";
import { DocumentBuilder, SwaggerModule } from "@nestjs/swagger";
import { AppModule } from "./app.module";
import { AllExceptionsFilter } from "./common/filters/http-exception.filter";

async function bootstrap() {
  const app = await NestFactory.create<NestFastifyApplication>(
    AppModule,
    new FastifyAdapter({
      logger: true,
    })
  );

  const configService = app.get(ConfigService);

  // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
  app.useGlobalPipes(
    new ValidationPipe({
      transform: true,
      whitelist: true,
      forbidNonWhitelisted: true,
    })
  );

  // –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –æ—à–∏–±–æ–∫
  app.useGlobalFilters(new AllExceptionsFilter());

  // CORS
  app.enableCors({
    origin: configService.get("CORS_ORIGIN") || "http://localhost:3000",
    credentials: true,
  });

  // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è API
  app.setGlobalPrefix("api");

  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è multipart –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
  await app.register(require("@fastify/multipart"), {
    limits: {
      fieldNameSize: 100,
      fieldSize: 100,
      fields: 10,
      fileSize: 5 * 1024 * 1024, // 5MB
      files: 5,
      headerPairs: 2000,
    },
  });

  // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
  await app.register(require("@fastify/static"), {
    root: process.cwd() + "/uploads",
    prefix: "/uploads/",
  });

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
  const config = new DocumentBuilder()
    .setTitle("–¢–µ–∑ –ö—ã–∑–º–∞—Ç API")
    .setDescription(
      `
      API –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–π –∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ –≤ –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω–µ.
      
      ## –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
      - üîê SMS –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ JWT —Ç–æ–∫–µ–Ω—ã
      - üì± –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω–∞
      - üöú 5 –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–µ—Ö–Ω–∏–∫–∏ (—Ç—Ä–∞–∫—Ç–æ—Ä—ã, –ö–∞–º–ê–ó—ã, –±–µ—Ç–æ–Ω–æ–º–µ—à–∞–ª–∫–∏ –∏ –¥—Ä.)
      - üì∏ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
      - üîç –ú–æ—â–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –ø–æ–∏—Å–∫–∞
      
      ## –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è:
      –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞—â–∏—â–µ–Ω–Ω—ã–º–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Bearer —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization.
      
      ## SMS –∫–æ–¥—ã:
      –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ SMS –∫–æ–¥—ã –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å —Å–µ—Ä–≤–µ—Ä–∞.
    `
    )
    .setVersion("1.0.0")
    .setContact(
      "–¢–µ–∑ –ö—ã–∑–º–∞—Ç Support",
      "https://tez-kyzmat.kg",
      "support@tez-kyzmat.kg"
    )
    .setLicense("MIT", "https://opensource.org/licenses/MIT")
    .addServer("http://localhost:3001", "Development Server")
    .addServer("https://api.tez-kyzmat.kg", "Production Server")
    .addBearerAuth(
      {
        type: "http",
        scheme: "bearer",
        bearerFormat: "JWT",
        name: "JWT",
        description:
          "–í–≤–µ–¥–∏—Ç–µ JWT —Ç–æ–∫–µ–Ω (–ø–æ–ª—É—á–∏—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ /auth/verify-login –∏–ª–∏ /auth/verify-register)",
        in: "header",
      },
      "JWT-auth"
    )
    .addTag("auth", "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ SMS")
    .addTag("services", "–û–±—ä—è–≤–ª–µ–Ω–∏—è –æ —Ç–µ—Ö–Ω–∏–∫–µ")
    .addTag("common", "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã")
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup("docs", app, document, {
    swaggerOptions: {
      persistAuthorization: true,
      tagsSorter: "alpha",
      operationsSorter: "alpha",
    },
    customSiteTitle: "–¢–µ–∑ –ö—ã–∑–º–∞—Ç API Docs",
    customfavIcon: "/favicon.ico",
    customCssUrl: "/swagger-ui-custom.css",
  });

  const port = configService.get("PORT") || 3001;
  await app.listen(port, "0.0.0.0");

  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
  console.log(`üìñ Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:${port}/docs`);
  console.log(`üîó API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã: http://localhost:${port}/api`);
}

bootstrap();
